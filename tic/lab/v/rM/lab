#!/bin/sh
# $Id: lab,v 1.3 2006/01/19 11:24:50 doros Exp $

SCRIPTNAME=`echo $0 | awk -vFS='/' '{print $NF}'`

waitfinish()
{
    SEMAPHORE=$1.booting
    touch $SEMAPHORE
    while [ -f $SEMAPHORE ]; do
        sleep 2
    done
    sleep 2
}

notifyfinish()
{
    rm $1.booting
}



startvm()
{
    X="-q --exec=/hosthome${PWD#$HOME}/${SCRIPTNAME}"

    ########################################### topology
    #
    #

    f=~/.Xdefaults-`hostname`
    if [ -f $f ] ; then
      mv $f $f.save
    fi

    echo "*xterm*geometry: 80x12+243+27">$f
    export NETKIT_VM_TYPE=sarge
    vstart ISP --eth0=A --eth1=D --mem=32 $X
    waitfinish ISP

    echo "*xterm*geometry: 80x15-91+231">$f
    export NETKIT_VM_TYPE=bering
    export NETKIT_BERING_FD=rM/fd0.fs
    vstart rM --eth0=A  --eth1=B --eth2=C --mem=32 $X
    waitfinish rM

    echo "*xterm*geometry: 80x15-1+256">$f
    export NETKIT_BERING_FD=rB/fd0.fs
    vstart rB --eth0=A  --eth1=B --eth2=C --mem=32 $X
    waitfinish rB

    echo "*xterm*geometry: 80x12+352-55">$f
    export NETKIT_VM_TYPE=sarge
    vstart int --eth0=C --mem=32 $X
    waitfinish int

    echo "*xterm*geometry: 80x12-75-24">$f
    export NETKIT_VM_TYPE=sarge
    vstart dmz --eth0=B --mem=32 $X
    waitfinish dmz

    echo "*xterm*geometry: 80x15+4+256">$f
    export NETKIT_VM_TYPE=bering
    export NETKIT_BERING_FD=rC/fd0.fs
    vstart rC --eth0=D  --eth1=E --eth2=F --mem=32 $X
    waitfinish rC

    if [ -f $f.save ] ; then
      mv $f.save $f
    else
      rm -f $f
    fi

    #
    #
    ########################################### end topology
    echo ""
    echo " *** all machines started *** "
}

crashvm()
{
    ########################################### crash
    #
    #
    vcrash ISP
    vcrash rM
    vcrash rB
    vcrash int
    vcrash dmz
    vcrash rC
    #
    #
    ########################################### end crash
}


help_exit()
{
        echo "usage: $0 {start|crash}"
        echo "  Run this script from your home or from a subdir"
        echo "  lab start"
        echo "     starts all virtual machines for the lab "
        echo "     press enter after each virtual machines has booted"
        echo "  lab crash"
        echo "     makes all virtual machines to crash and delete .disk files"
        exit 1
}


if [ "$1" = "start" ]; then
     startvm

elif [ "$1" = "crash" ]; then
     crashvm
     rm -f *.disk   *.booting
elif [ "$1" = "clean" ]; then
     rm -f *.disk   *.booting
elif [ ! -z $1 ]; then
     help_exit

elif [ -z $1 ]; then

    if [ `id -u` != "0"  ]; then
        help_exit
    fi


    #
    # this is executed in the virtual machine by vlab_guest when initializing
    # and it is NEVER executed by in the host environment
    #
    SCRIPTFILE=`cat /proc/cmdline | awk -v FS== -v RS=' ' '{if($1=="exec") print $2}' `
    SCRIPTDIR=${SCRIPTFILE%/${SCRIPTNAME}}
    cd $SCRIPTDIR


    case "$HOSTNAME" in

    ################################################### machine configurations
    #
    #

    ISP)
        # IP address
        ifconfig eth0 88.36.248.225 up
        ifconfig eth1 85.46.70.129 up
        #
        echo "1" > /proc/sys/net/ipv4/ip_forward

        notifyfinish ISP
        ;;

    rM)
        notifyfinish rM
        ;;

    rB)
        notifyfinish rB
        ;;


    int)
        # IP address
        ifconfig eth0 192.168.100.1
        # default gateway
        route add default gw 192.168.100.254

        notifyfinish int
        ;;

    dmz)
        # IP address
        ifconfig eth0 10.0.1.222
        # default gateway
        route add default gw 10.0.1.254

        notifyfinish dmz
        ;;

    rC)
        notifyfinish rC
        ;;

    #
    #
    ################################################# end machine configurations


    *)
        echo internal error: $HOSTNAME
        exit 1
    esac
fi
