#!/bin/sh
# $Id: lab,v 1.10 2006/09/06 20:24:57 doros Exp $

SCRIPTNAME=`echo $0 | awk -vFS='/' '{print $NF}'`

waitfinish()
{
    SEMAPHORE=$1.booting
    touch $SEMAPHORE
    while [ -f $SEMAPHORE ]; do
        sleep 2
    done
    sleep 2
}

notifyfinish()
{
    rm $1.booting
}



startvm()
{
    X="-q --exec=/hosthome${PWD#$HOME}/${SCRIPTNAME}"
    export NETKIT_VM_TYPE=sarge

    ########################################### topology
    #
    #

    f=~/.Xdefaults-`hostname`
    if [ -f $f ] ; then
      mv $f $f.save
    fi

    # Making backing store
    echo "Making backing store ... "
    if [ "none$BACK_ST" != "none" ]; then
      mkdir $BACK_ST/tmp
      # We can't use "seek" because we ignore filesystem type
      rm -f $BACK_ST/tmp/backing-store-01
      dd if=/dev/zero of=$BACK_ST/tmp/backing-store-01 bs=1M count=145 2>/dev/null
      rm -f $BACK_ST/tmp/backing-store-02
      dd if=/dev/zero of=$BACK_ST/tmp/backing-store-02 bs=1M count=145 2>/dev/null
      rm -f $BACK_ST/tmp/backing-store-03
      dd if=/dev/zero of=$BACK_ST/tmp/backing-store-03 bs=1M count=145 2>/dev/null
      rm -f /tmp/backing-store-04
      dd if=/dev/zero of=/tmp/backing-store-04 bs=1M count=145 2>/dev/null
    else
      rm -f /tmp/backing-store-01
      dd if=/dev/zero of=/tmp/backing-store-01 bs=1M seek=145 count=1 2>/dev/null
      rm -f /tmp/backing-store-02
      dd if=/dev/zero of=/tmp/backing-store-02 bs=1M seek=145 count=1 2>/dev/null
      rm -f /tmp/backing-store-03
      dd if=/dev/zero of=/tmp/backing-store-03 bs=1M seek=145 count=1 2>/dev/null
      rm -f /tmp/backing-store-04
      dd if=/dev/zero of=/tmp/backing-store-04 bs=1M seek=145 count=1 2>/dev/null
    fi
    echo "Done."
    
    echo "*xterm*geometry: 80x24+1+35">$f
    vstart left --eth0=A --eth1=B --eth2=C --mem=128 \
      --append="ubd1=$BACK_ST/tmp/backing-store-01" \
      --append="ubd2=$BACK_ST/tmp/backing-store-02" $X
    waitfinish left

    echo "*xterm*geometry: 80x24-1+35">$f
    vstart right --eth0=A --eth1=B --eth2=C --mem=128 \
      --append="ubd1=$BACK_ST/tmp/backing-store-03" \
      --append="ubd2=$BACK_ST/tmp/backing-store-04" $X
    waitfinish right


    echo "*xterm*geometry: 80x12+269+128">$f
    vstart client --append="eth0=tuntap,tap0" --eth1=C --mem=64 $X
    waitfinish client

    if [ -f $f.save ] ; then
      mv $f.save $f
    else
      rm -f $f
    fi

    #
    #
    ########################################### end topology
    echo ""
    echo " *** all machines started ***"
}

crashvm()
{
    ########################################### crash
    #
    #
    vcrash left
    vcrash right
    vcrash client
    #
    #
    ########################################### end crash
}


help_exit()
{
        echo "usage: $0 {start|crash}"
        echo "  Run this script from your home or from a subdir"
        echo "  lab start"
        echo "     starts all virtual machines for the lab "
        echo "     press enter after each virtual machines has booted"
        echo "  lab crash"
        echo "     makes all virtual machines to crash and delete .disk files"
        exit 1
}


if [ "$1" = "start" ]; then
     if [ `grep tap0 /proc/net/dev|wc -l` = 0 ] ; then
       echo "missing tap0 device"
       exit 1
     fi
     startvm

elif [ "$1" = "crash" ]; then
     crashvm
     rm -f *.disk   *.booting
elif [ ! -z $1 ]; then
     help_exit

elif [ -z $1 ]; then

    if [ `id -u` != "0"  ]; then
        help_exit
    fi


    #
    # this is executed in the virtual machine by vlab_guest when initializing
	# and it is NEVER executed by in the host environment
	#
    SCRIPTFILE=`cat /proc/cmdline | awk -v FS== -v RS=' ' '{if($1=="exec") print $2}' `
    SCRIPTDIR=${SCRIPTFILE%/${SCRIPTNAME}}
    cd $SCRIPTDIR


    case "$HOSTNAME" in

    ################################################### machine configurations
    #
    #

    left)
        # configure IP address 
        ifconfig eth2 193.206.185.1 up
        route add default gw 193.206.185.100
        # fstab
        mv /etc/fstab /etc/fstab.org
        cp $SCRIPTDIR/fstab /etc/fstab
        mkdir /nfs
        # DNS file
        cp $SCRIPTDIR/hosts /etc/hosts
        # ssh
        rm /etc/ssh/sshd_not_to_be_run
        /etc/init.d/ssh start
        cp $SCRIPTDIR/authorized_keys2 /root/.ssh/authorized_keys2
        chmod go= /root
        # bond
        #modprobe bonding mode=0 miimon=100
        modprobe bonding mode=0 miimon=2000
        ifconfig bond0 192.168.0.1 up
        ifenslave bond0 eth0 eth1
        # drbd
        mv /etc/drbd.conf /etc/drbd.conf.org
        cp $SCRIPTDIR/drbd.conf /etc/drbd.conf
        mv /lib/modules/2.4.27-bs1/kernel/drivers/block/drbd/drbd-2.4.27-bs1.o \
           /lib/modules/2.4.27-bs1/kernel/drivers/block/drbd/drbd.o
        modprobe drbd
        drbdadm up all
        drbdadm -- --do-what-I-say primary drbd0
        modprobe xfs
        mkfs.xfs -q /dev/drbd/0
        # drbdlinks: copy /var/www and /var/log/apache into drbd block
        tar czf /tmp/apache.tgz /var/www/index* /var/log/apache 2>/dev/null
        mount /var/www
        (cd /var/www; tar zxf /tmp/apache.tgz)
        umount /var/www
        # ha
        mv /etc/ha.d/ha.cf /etc/ha.d/ha.cf.org
        cp $SCRIPTDIR/ha.cf /etc/ha.d/ha.cf
        mv /etc/ha.d/haresources /etc/ha.d/haresources.org
        cp $SCRIPTDIR/haresources /etc/ha.d/haresources
        mv /etc/ha.d/authkeys /etc/ha.d/authkeys.org
        cp $SCRIPTDIR/authkeys /etc/ha.d/authkeys
        chmod go= /etc/ha.d/authkeys
        mv /etc/ha.d/resource.d/drbddisk /etc/ha.d/resource.d/drbddisk.org
        cp $SCRIPTDIR/drbddisk /etc/ha.d/resource.d/drbddisk
        # drbdlinks
        cp $SCRIPTDIR/drbdlinks-http.conf /etc/
        cp $SCRIPTDIR/drbdlinks-nfs.conf /etc/
        cp $SCRIPTDIR/drbdlinks-http /etc/ha.d/resource.d/
        cp $SCRIPTDIR/drbdlinks-nfs /etc/ha.d/resource.d/
        # http service
        mount /var/www
        cp $SCRIPTDIR/index.php /var/www
        echo "top" > /var/www/alert.txt
        umount /var/www
        mv /etc/ha.d/resource.d/apache /etc/ha.d/resource.d/apache.org
        update-rc.d -f apache remove
        # NFS service
        mv /etc/exports /etc/exports.org
        cp $SCRIPTDIR/exports /etc
        update-rc.d -f nfs-common remove
        update-rc.d -f nfs-user-server remove
        # mon
        mv /etc/init.d/mon /etc/init.d/mon.org
        cp $SCRIPTDIR/mon /etc/init.d/mon
        cp $SCRIPTDIR/uf /etc/mon/uf
        chmod go= /etc/mon/uf
        chown daemon /etc/mon/uf
        cp $SCRIPTDIR/mon.cf /etc/mon
        cp $SCRIPTDIR/auth.cf /etc/mon
        cp $SCRIPTDIR/disabled /root/disabled
        cp $SCRIPTDIR/mon-cluster-http /etc/ha.d/resource.d
        cp $SCRIPTDIR/mon-cluster-nfs /etc/ha.d/resource.d
        chmod go= /etc/ha.d/resource.d/mon-cluster-*
        chown daemon /etc/ha.d/resource.d/mon-cluster-*
        cp $SCRIPTDIR/*alert /usr/lib/mon/alert.d/
        touch /var/www/alert.txt
        chown daemon /var/www/alert.txt
        touch /nfs/alert.txt
        chown daemon /nfs/alert.txt
        /etc/init.d/mon start

        notifyfinish left
        ;;

    right)
        # configure IP address 
        ifconfig eth2 193.206.185.2 up
        route add default gw 193.206.185.100
        # fstab
        mv /etc/fstab /etc/fstab.org
        cp $SCRIPTDIR/fstab /etc/fstab
        mkdir /nfs
        # DNS file
        cp $SCRIPTDIR/hosts /etc/hosts
        # ssh
        rm /etc/ssh/sshd_not_to_be_run
        /etc/init.d/ssh start
        cp $SCRIPTDIR/authorized_keys2 /root/.ssh/authorized_keys2
        chmod go= /root
        # bond
        #modprobe bonding mode=0 miimon=100
        modprobe bonding mode=0 miimon=2000
        ifconfig bond0 192.168.0.2 up
        ifenslave bond0 eth0 eth1
        # drbd
        mv /etc/drbd.conf /etc/drbd.conf.org
        cp $SCRIPTDIR/drbd.conf /etc/drbd.conf
        mv /lib/modules/2.4.27-bs1/kernel/drivers/block/drbd/drbd-2.4.27-bs1.o \
           /lib/modules/2.4.27-bs1/kernel/drivers/block/drbd/drbd.o
        modprobe drbd
        drbdadm up all
        drbdadm -- --do-what-I-say primary drbd1
        modprobe xfs
        mkfs.xfs -q /dev/drbd/1
        # drbdlinks: copy /var/lib/nfs into drbd block
        tar czf /tmp/nfs.tgz /var/lib/nfs 2>/dev/null
        mount /nfs
        (cd /nfs; tar zxf /tmp/nfs.tgz)
        umount /nfs
        # ha
        mv /etc/ha.d/ha.cf /etc/ha.d/ha.cf.org
        cp $SCRIPTDIR/ha.cf /etc/ha.d/ha.cf
        mv /etc/ha.d/haresources /etc/ha.d/haresources.org
        cp $SCRIPTDIR/haresources /etc/ha.d/haresources
        mv /etc/ha.d/authkeys /etc/ha.d/authkeys.org
        cp $SCRIPTDIR/authkeys /etc/ha.d/authkeys
        chmod go= /etc/ha.d/authkeys
        mv /etc/ha.d/resource.d/drbddisk /etc/ha.d/resource.d/drbddisk.org
        cp $SCRIPTDIR/drbddisk /etc/ha.d/resource.d/drbddisk
        # drbdlinks
        cp $SCRIPTDIR/drbdlinks-http.conf /etc/
        cp $SCRIPTDIR/drbdlinks-nfs.conf /etc/
        cp $SCRIPTDIR/drbdlinks-http /etc/ha.d/resource.d/
        cp $SCRIPTDIR/drbdlinks-nfs /etc/ha.d/resource.d/
        # http service
        mv /etc/ha.d/resource.d/apache /etc/ha.d/resource.d/apache.org
        update-rc.d -f apache remove
        # NFS service
        mount /nfs
        echo "top" > /nfs/alert.txt
        umount /nfs
        mv /etc/exports /etc/exports.org
        cp $SCRIPTDIR/exports /etc
        update-rc.d -f nfs-common remove
        update-rc.d -f nfs-user-server remove
        # mon
        mv /etc/init.d/mon /etc/init.d/mon.org
        cp $SCRIPTDIR/uf /etc/mon/uf
        chmod go= /etc/mon/uf
        chown daemon /etc/mon/uf
        cp $SCRIPTDIR/mon /etc/init.d/mon
        cp $SCRIPTDIR/mon.cf /etc/mon
        cp $SCRIPTDIR/auth.cf /etc/mon
        cp $SCRIPTDIR/disabled /root/disabled
        cp $SCRIPTDIR/mon-cluster-http /etc/ha.d/resource.d
        cp $SCRIPTDIR/mon-cluster-nfs /etc/ha.d/resource.d
        chmod go= /etc/ha.d/resource.d/mon-cluster-*
        chown daemon /etc/ha.d/resource.d/mon-cluster-*
        cp $SCRIPTDIR/*alert /usr/lib/mon/alert.d/
        touch /var/www/alert.txt
        chown daemon /var/www/alert.txt
        touch /nfs/alert.txt
        chown daemon /nfs/alert.txt
        /etc/init.d/mon start

        notifyfinish right
        ;;

    client)
        # setup pconsole environment
        echo 'export P_CONNECT_CMD=ssh' >> /etc/profile
        echo 'export P_TERM_OPTIONS="-geometry 140x24 +sb"' >> /etc/profile
        echo 'export DISPLAY=192.168.77.1:0.0' >> /etc/profile
        # configure IP address 
        ifconfig eth0 192.168.77.2 up
        route add default gw 192.168.77.1
        ifconfig eth1 193.206.185.100 up
        # DNS file
        cp $SCRIPTDIR/hosts.client /etc/hosts
        # ssh
        cp $SCRIPTDIR/id_dsa* /root/.ssh
        chmod go= /root/.ssh/id_dsa
        cp $SCRIPTDIR/known_hosts /root/.ssh/known_hosts
        # NFS
        cat $SCRIPTDIR/fstab.client >> /etc/fstab
        modprobe nfs lockd sunrpc
        mkdir /mnt/nfs

        notifyfinish client
        ;;

    #
    #
    ############################################## end machine configurations


    *)
        echo internal error: $HOSTNAME
        exit 1
    esac
fi
